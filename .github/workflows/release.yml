name: Release
on:
  push:
    branches:
      - main
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: subosito/flutter-action@v1
        with:
          channel: 'dev'

      # - id: latestRelease
      #   uses: pozetroninc/github-action-get-latest-release@master
      #   with:
      #     repository: ${{ github.repository }}

      - name: "call action"
        id: latestRelease
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          exclude_types: "release"
          view_top: 1

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      # Get flutter dependencies.
      - run: flutter pub get

      - run: echo "${{ steps.latestRelease.tag_name }}"

      - name: Check if we should release
        id: checkShouldRelease
        run: |
          pwd
          output=$(flutter pub run --no-sound-null-safety diligence shouldRelease ${{ steps.latestRelease.tag_name }})
          echo $output
          echo "::set-output name=should::$output"

      - name: Echo output of checkShouldRelease
        run: echo "${{ steps.checkShouldRelease.outputs.should }}"

      - if: steps.checkShouldRelease.outputs.should == 'yes'
        run: echo "Will release"

      - if: steps.checkShouldRelease.outputs.should != 'yes'
        run: echo "Will not release"

      # - name: Install dependencies
      #   run: npm ci

      # - name: Release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: npx semantic-release
